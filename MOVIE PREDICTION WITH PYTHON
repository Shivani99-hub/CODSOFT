import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import OneHotEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score

# Step 1: Load Data
df = pd.read_csv('"C:\Users\shiva\Downloads\IMDb Movies India.csv\IMDb Movies India.csv"') 
print(df.head())

# Step 2: Basic Preprocessing
# Fill missing values
df = df.fillna('Unknown')

# Keep only top N directors and actors to avoid high cardinality
top_directors = df['director'].value_counts().index[:10]
df['director'] = df['director'].apply(lambda x: x if x in top_directors else 'Other')

top_actors = df['actors'].apply(lambda x: x.split(',')).explode().value_counts().index[:20]
df['actors'] = df['actors'].apply(lambda x: ', '.join([a if a in top_actors else 'Other' for a in x.split(',')]))

# Step 3: Encode Features
features = df[['genre', 'director', 'actors']]
target = df['rating']

encoder = OneHotEncoder(handle_unknown='ignore')
encoded_features = encoder.fit_transform(features)

# Step 4: Train/Test Split
X_train, X_test, y_train, y_test = train_test_split(
    encoded_features, target, test_size=0.2, random_state=42
)

# Step 5: Train Regression Model
model = RandomForestRegressor(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Step 6: Evaluate Model
y_pred = model.predict(X_test)
print(f'RMSE: {mean_squared_error(y_test, y_pred, squared=False):.2f}')
print(f'RÂ² Score: {r2_score(y_test, y_pred):.2f}')
